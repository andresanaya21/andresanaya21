# this file install infra in aws (sgs, route-table, ec2, lb)
# install 1 master (control plane), 1 node (worker) using an existent infra (vcp, igw, natgtw)
# https://blog.scottlowe.org/2019/09/09/consuming-preexisting-aws-infrastructure-with-cluster-api/
# https://techbloc.net/archives/4661

# elb internal:
# to use elb internal, cluster management must be accessible to internal elb.
# you can apply elb internal like:
# apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
# kind: AWSCluster
# metadata:
#   name: my-cluster
# spec:
#   region: us-east-1
#   controlPlaneLoadBalancer:
#     scheme: internal
#----------------------------------
# or use AWSMachineTemplate
# apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
# kind: AWSMachineTemplate
# metadata:
#   name: my-machine-template
# spec:
#   template:
#     spec:
#       instanceType: t3.large
#       iamInstanceProfile: "nodes.cluster-api-provider-aws.sigs.k8s.io"
#       classicELBScheme: internal

apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: capi-outpost
  namespace: default
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 192.168.0.0/16
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: capi-outpost-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
    kind: AWSCluster
    name: capi-outpost
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSCluster
metadata:
  name: capi-outpost
  namespace: default
spec:
  region: eu-west-3
  controlPlaneLoadBalancer:
    scheme: internal
    subnets:
     - subnet-00ffe59d62a001b3c # private subnet
     - subnet-04181eb87263004ff # private subnet
     - subnet-0eef94b68b5695f8a # private subnet
  sshKeyName: outpost-key
  bastion:
#    enabled: true
  network:
    vpc:
      id: vpc-0022c4e25e5bb8a39
    subnets:
      - id: subnet-0325bb7e543dda653 # private subnet outpost
      - id: subnet-0d07d76bc0013a064 # private subnet outpot
  
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane 
metadata:
  name: capi-outpost-control-plane
  namespace: default
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-provider: aws
      controllerManager:
        extraArgs:
          cloud-provider: aws
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: aws
         # provider-id: aws:///'{{ ds.meta_data.instance_id }}'
        name: '{{ ds.meta_data.local_hostname }}'
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: aws
         # provider-id: aws:///'{{ ds.meta_data.instance_id }}'
        name: '{{ ds.meta_data.local_hostname }}'
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
      kind: AWSMachineTemplate
      name: capi-outpost-control-plane
  replicas: 1
  version: v1.25.0
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSMachineTemplate
metadata:
  name: capi-outpost-control-plane
  namespace: default
spec:
  template:
    spec:
      iamInstanceProfile: control-plane.cluster-api-provider-aws.sigs.k8s.io
      instanceType: c6id.2xlarge
      sshKeyName: outpost-key
      rootVolume:
        size: 80
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: capi-outpost-md-0
  namespace: default
spec:
  clusterName: capi-outpost
  replicas: 1
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: capi-outpost-md-0
      clusterName: capi-outpost
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: AWSMachineTemplate
        name: capi-outpost-md-0
      version: v1.25.0
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSMachineTemplate
metadata:
  name: capi-outpost-md-0
  namespace: default
spec:
  template:
    spec:
      iamInstanceProfile: nodes.cluster-api-provider-aws.sigs.k8s.io
      instanceType: c6id.2xlarge
      sshKeyName: outpost-key
      rootVolume:
        size: 80
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: capi-outpost-md-0
  namespace: default
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: aws
           # provider-id: aws:///'{{ ds.meta_data.instance_id }}'
          name: '{{ ds.meta_data.local_hostname }}'